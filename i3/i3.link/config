# This file has been auto-generated by i3-config-wizard(1).
# It will not be overwritten, so edit it as you like.
#
# Should you change your keyboard layout some time, delete
# this file and re-run i3-config-wizard(1).
#

# i3 config file (v4)
#
# Please see http://i3wm.org/docs/userguide.html for a complete reference!

set $mod Mod1

# Font for window titles. Will also be used by the bar unless a different font
# is used in the bar {} block below.
# This font is widely installed, provides lots of unicode glyphs, right-to-left
# text rendering and scalability on retina/hidpi displays (thanks to pango).
font pango:DejaVu Sans Mono 8
# Before i3 v4.8, we used to recommend this one as the default:
# font -misc-fixed-medium-r-normal--13-120-75-75-C-70-iso10646-1
# The font above is very space-efficient, that is, it looks good, sharp and
# clear in small sizes. However, its unicode glyph coverage is limited, the old
# X core fonts rendering does not support right-to-left and this being a bitmap
# font, it doesn’t scale on retina/hidpi displays.

# Use Mouse+$mod to drag floating windows to their wanted position
floating_modifier $mod

#/ another non-default. press mod+(workspace) to change to a workspace, press it
#/ again to change back to the one you just left:
workspace_auto_back_and_forth yes

# start a terminal
bindsym $mod+Return exec i3-sensible-terminal

# kill focused window
bindsym $mod+Shift+q kill

# start dmenu (a program launcher)
bindsym Ctrl+space exec dmenu_run
# There also is the (new) i3-dmenu-desktop which only displays applications
# shipping a .desktop file. It is a wrapper around dmenu, so you need that
# installed.
#/ it was a pain in the neck at first, but i'm glad I learned the names
#/ of the binaries for everything rather than the ubuntu-style "fancy name".
#/ for e.g. the PDF viewer is actually called 'evince'.
#/ makes it easier to find the source, easier to find the actual binary and
#/ its supporting files, etc.
# bindsym $mod+d exec --no-startup-id i3-dmenu-desktop

# change focus
#/ better to keep in sync with vim, better to keep vim in sync
#/ with the rest of the world's vim. "jkl;" is a nice idea, but
#/ you wouldn't use a DVORAK keyboard, would you?
bindsym $mod+h focus left
bindsym $mod+j focus down
bindsym $mod+k focus up
bindsym $mod+l focus right

# alternatively, you can use the cursor keys:
bindsym $mod+Left focus left
bindsym $mod+Down focus down
bindsym $mod+Up focus up
bindsym $mod+Right focus right

# move focused window
## see earlier admonition about the madness of "jkl;"
bindsym $mod+Shift+h move left
bindsym $mod+Shift+j move down
bindsym $mod+Shift+k move up
bindsym $mod+Shift+l move right

# alternatively, you can use the cursor keys:
bindsym $mod+Shift+Left move left
bindsym $mod+Shift+Down move down
bindsym $mod+Shift+Up move up
bindsym $mod+Shift+Right move right

# split in horizontal orientation
#/ mod+h and mod+v are nice defaults for "split horizontal/
#/ vertical", but this idiom is a noble sacrifice for the sake
#/ of avoiding the consistency hell that is "jkl;"
#- bindsym $mod+h split h
bindsym $mod+s split h

# split in vertical orientation
bindsym $mod+v split v

#/ not a default binding, but it helps for when you can't
#/ quite remember that it's mod+s, not mod+h. I used to use
#/ it a lot more than I do now that I remember mod+s
bindsym $mod+t layout toggle split

# enter fullscreen mode for the focused container
bindsym $mod+f fullscreen

# change container layout (stacked, tabbed, default)
#/ using mod+s for "split h" means it can't be used for
#/ "layout stacking". that's ok, this is miles better. why
#/ have "mod+s" a mnemonic for stacking when you can't have
#/ a mnemonic for the other two because "mod+d" is taken?
#/ "qwe" are adjacent on the keyboard, which makes this a much
#/ more natural set of bindings, abandoning all pretentions of
#/ mnemonic for logical proximity:
bindsym $mod+q layout stacking
bindsym $mod+w layout tabbed
bindsym $mod+e layout default

# toggle tiling / floating
bindsym $mod+Shift+space floating toggle

# change focus between tiling / floating windows
bindsym $mod+space focus mode_toggle

# focus the parent container
bindsym $mod+a focus parent

# focus the child container
# this is set to mod+d and commented out by default in the standard
# i3 config. we have (hopefully) already seen the benefits of
# adjacent bindings with "mod+[qwe]", let's apply the same here: 
bindsym $mod+z focus child

# switch to workspace
bindsym $mod+1 workspace 1
bindsym $mod+2 workspace 2
bindsym $mod+3 workspace 3
bindsym $mod+4 workspace 4
bindsym $mod+5 workspace 5
bindsym $mod+6 workspace 6
bindsym $mod+7 workspace 7
bindsym $mod+8 workspace 8
bindsym $mod+9 workspace 9
bindsym $mod+0 workspace 10

# move focused container to workspace
#/ original i3 config doesn't follow the window when you move it,
#/ which is what I want about 0.1% of the time. the other 99.9% of
#/ the time, I want it to follow:
bindsym $mod+Shift+exclam move workspace 1; workspace 1
bindsym $mod+Shift+at move workspace 2; workspace 2
bindsym $mod+Shift+numbersign move workspace 3; workspace 3
bindsym $mod+Shift+dollar move workspace 4; workspace 4
bindsym $mod+Shift+percent move workspace 5; workspace 5
bindsym $mod+Shift+asciicircum move workspace 6; workspace 6
bindsym $mod+Shift+ampersand move workspace 7; workspace 7
bindsym $mod+Shift+asterisk move workspace 8; workspace 8
bindsym $mod+Shift+parenleft move workspace 9; workspace 9
bindsym $mod+Shift+parenright move workspace 10; workspace 10

# reload the configuration file
bindsym $mod+Shift+c reload
# restart i3 inplace (preserves your layout/session, can be used to upgrade i3)
bindsym $mod+Shift+r restart
# exit i3 (logs you out of your X session)
bindsym $mod+Shift+e exec "i3-nagbar -t warning -m 'You pressed the exit shortcut. Do you really want to exit i3? This will end your X session.' -b 'Yes, exit i3' 'i3-msg exit'"

# resize window (you can also use the mouse for that)
mode "resize" {
        # These bindings trigger as soon as you enter the resize mode

        # Pressing left will shrink the window’s width.
        # Pressing right will grow the window’s width.
        # Pressing up will shrink the window’s height.
        # Pressing down will grow the window’s height.

        #/ see earlier admonition about the madness of "jkl;"
        bindsym h resize shrink width 10 px or 10 ppt
        bindsym j resize grow height 10 px or 10 ppt
        bindsym k resize shrink height 10 px or 10 ppt
        bindsym l resize grow width 10 px or 10 ppt

        # same bindings, but for the arrow keys
        bindsym Left resize shrink width 10 px or 10 ppt
        bindsym Down resize grow height 10 px or 10 ppt
        bindsym Up resize shrink height 10 px or 10 ppt
        bindsym Right resize grow width 10 px or 10 ppt

        # back to normal: Enter or Escape
        bindsym Return mode "default"
        bindsym Escape mode "default"
}

bindsym $mod+r mode "resize"

# Start i3bar to display a workspace bar (plus the system information i3status
# finds out, if available)
bar {
        status_command i3status
}

exec --no-startup-id ~/bin/duals


# gaps

for_window [class="^.*"] border pixel 5
gaps inner 20 
gaps outer 0


# class                 border  backgr. text    indicator child_border
client.focused          #4c7899 #285577 #ffffff #2e9ef4   #285577
client.focused_inactive #333333 #5f676a #ffffff #484e50   #5f676a
client.unfocused        #333333 #222222 #888888 #292d2e   #222222
client.urgent           #2f343a #900000 #ffffff #900000   #900000
client.placeholder      #000000 #0c0c0c #ffffff #000000   #0c0c0c
 
client.background       #ffffff

